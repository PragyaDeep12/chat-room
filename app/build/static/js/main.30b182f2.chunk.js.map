{"version":3,"sources":["icons/happy.svg","icons/sad.svg","icons/confused.svg","icons/angry.svg","icons/scared.svg","icons/app-icon.svg","logo.svg","Dao/SocketDAO.ts","Components/Navbar.tsx","Contexts/LoginContext.ts","Components/Sidebar.tsx","Components/ChatInputLayout.tsx","Components/Debouncer.ts","Components/MessageBox.tsx","Components/ChatScreen.tsx","Pages/Home.tsx","Components/SignupComponent.tsx","Components/LoginComponent.tsx","Pages/LoginSignup.tsx","Components/CustomSnackBar.tsx","Contexts/LoginProvider.tsx","Pages/Loading.tsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","socket","require","Navbar","isMounted","useEffect","react_default","a","createElement","className","href","type","onClick","Object","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","disconnect","firebase","auth","signOut","stop","React","createContext","state","loginInfo","user","isLoggedIn","idToken","actions","Sidebar","props","useContext","LoginContext","isMobile","_useState","useState","_useState2","slicedToArray","userName","setUserName","_useState3","_useState4","onlineUsers","setOnlineUsers","_useState5","_useState6","isOpen","setIsOpen","on","data","firestore","collection","where","get","then","docsSnapshot","users","docs","forEach","push","lib_default","onSelect","selected","disabled","expanded","onToggle","Toggle","Nav","lib","eventKey","style","fontSize","align","name","email","length","map","index","key","ChatInputLayout","_React$useState","_React$useState2","messageText","setMessageText","emojiClassName","setEmojiClassName","emojiFetch","value","delay","debouncedValue","setDebouncedValue","handler","setTimeout","clearTimeout","useDebounce","console","log","document_tone","tones","JSON","stringify","tone_id","mydata","sort","b","score","getEmoji","sendMessage","body","message","time","Date","getTime","emit","sendEmoji","_ref","t0","abrupt","apply","this","arguments","_ref2","_callee2","_context2","aria-label","aria-describedby","onChange","_ref3","_callee3","e","_context3","target","_x","id","_callee4","_context4","alert","alt","MessageBox","src","HappyEmoji","ConfusedEmoji","SadEmoji","AngryEmoji","ScaredEmoji","format","ChatScreen","messageList","setMessageList","setMessage","connected","connect","element","newMessage","concat","toConsumableArray","item","Home","setIsMobile","window","addEventListener","listner","innerWidth","document","getElementsByClassName","Fragment","SignupComponent","_useContext","signUp","setEmail","setName","_useState7","_useState8","password","setPassword","_useState9","_useState10","rPassword","setRPassword","_useState11","error_message","_useState12","formSubmit","preventDefault","sent","onSubmit","placeholder","react_router_dom","to","LoginComponent","login","react","LoginSignup","appIcon","page","openSnackbarFn","CustomSnackbar","open","timeout","snack","setSnack","openSnackbar","onhide","role","hidden","data-dismiss","objectSpread","aria-hidden","val","LoginProvider","uid","setLoginInfo","signInWithEmailAndPassword","_x3","catch","err","_x2","getDb","doc","exists","createUserWithEmailAndPassword","_ref4","userObj","status","set","username","_x8","_x4","_x5","_x6","_x7","Provider","getUserDetails","res","userDetails","setLoginDetails","children","Loading","App","react_router","path","exact","render","LoginWrapper","PrivateRoute","component","_useContext$actions","onAuthStateChanged","error","Component","rest","objectWithoutProperties","assign","Boolean","location","hostname","match","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.30b182f2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/happy.fe43d80f.svg\";","module.exports = __webpack_public_path__ + \"static/media/sad.a196067d.svg\";","module.exports = __webpack_public_path__ + \"static/media/confused.c30d3d43.svg\";","module.exports = __webpack_public_path__ + \"static/media/angry.bfb96aea.svg\";","module.exports = __webpack_public_path__ + \"static/media/scared.882b3ad5.svg\";","module.exports = __webpack_public_path__ + \"static/media/app-icon.0072162b.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","export const socket = require(\"socket.io-client\")(\r\n  \"https://limitless-chamber-11506.herokuapp.com/\"\r\n);\r\n","import React, { useState, useEffect } from \"react\";\r\nimport firebase from \"firebase\";\r\nimport { socket } from \"../Dao/SocketDAO\";\r\nimport { openSnackbar } from \"./CustomSnackBar\";\r\nexport default function Navbar() {\r\n  let isMounted = false;\r\n  useEffect(() => {\r\n    if (!isMounted) {\r\n      isMounted = true;\r\n      // socket.on(\"latestOnlineUsers\", onlineUsers => {\r\n      //   // console.log(onlineUsers);\r\n      // });\r\n    }\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n        <a href=\"#\" className=\"navbar-brand\">\r\n          <img className=\"chat-icon\" />\r\n          Chat Room\r\n        </a>\r\n        <button\r\n          type=\"button\"\r\n          className=\"navbar-logout\"\r\n          onClick={async () => {\r\n            socket.disconnect();\r\n            await firebase.auth().signOut();\r\n            // openSnackbar({ message: \"Demo Message\", timeout: 3000 });\r\n          }}\r\n        >\r\n          logout\r\n        </button>\r\n      </nav>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport LoginInfo from \"../Models/LoginInfo\";\r\nexport default React.createContext({\r\n  state: {\r\n    loginInfo: {\r\n      user: null,\r\n      isLoggedIn: null,\r\n      idToken: null\r\n    } as LoginInfo\r\n  },\r\n  actions: {}\r\n});\r\n","import React, { useEffect, useState } from \"react\";\r\nimport SideNav, {\r\n  Toggle,\r\n  Nav,\r\n  NavItem,\r\n  NavIcon,\r\n  NavText\r\n} from \"@trendmicro/react-sidenav\";\r\nimport LoginContext from \"../Contexts/LoginContext\";\r\nimport { socket } from \"../Dao/SocketDAO\";\r\n\r\nimport firebase from \"firebase\";\r\nimport User from \"../Models/User\";\r\nimport { width } from \"@material-ui/system\";\r\nimport { stat } from \"fs\";\r\n\r\nexport default function Sidebar(props) {\r\n  const {\r\n    state: { loginInfo }\r\n  } = React.useContext(LoginContext);\r\n  const { isMobile } = props;\r\n  const [userName, setUserName] = useState();\r\n  const [onlineUsers, setOnlineUsers] = useState<User[]>([]);\r\n  const [isOpen, setIsOpen] = useState<boolean>(!isMobile);\r\n  useEffect(() => {\r\n    setIsOpen(!isMobile);\r\n  }, [isMobile]);\r\n  let isMounted = false;\r\n  useEffect(() => {\r\n    if (!isMounted) {\r\n      if (loginInfo && loginInfo.user && loginInfo.user.userName) {\r\n        setUserName(loginInfo.user.userName);\r\n      }\r\n      socket.on(\"latestOnlineUsersArrived\", data => {\r\n        if (data === \"check\") {\r\n          firebase\r\n            .firestore()\r\n            .collection(\"users\")\r\n            .where(\"status\", \"==\", \"online\")\r\n            .get()\r\n            .then(docsSnapshot => {\r\n              var users: User[] = [];\r\n              docsSnapshot.docs.forEach(docs => {\r\n                if (docs.data()) {\r\n                  var user: User = docs.data() as User;\r\n                  if (loginInfo && loginInfo.user) {\r\n                    if (loginInfo.user.userName != user.userName) {\r\n                      users.push(user);\r\n                      users.push(user);\r\n                      users.push(user);\r\n                      users.push(user);\r\n                      users.push(user);\r\n                      users.push(user);\r\n                      users.push(user);\r\n                      users.push(user);\r\n                      users.push(user);\r\n                      users.push(user);\r\n                      users.push(user);\r\n                      users.push(user);\r\n                      users.push(user);\r\n                      users.push(user);\r\n                      users.push(user);\r\n                      users.push(user);\r\n                      users.push(user);\r\n                      users.push(user);\r\n                    }\r\n                  }\r\n                }\r\n              });\r\n              setOnlineUsers(users);\r\n            });\r\n        }\r\n      });\r\n    }\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <SideNav\r\n        onSelect={selected => {\r\n          // Add your code here\r\n        }}\r\n        disabled={!isMobile}\r\n        expanded={isOpen}\r\n        onToggle={state => {\r\n          // console.log(state);\r\n          setIsOpen(state);\r\n        }}\r\n      >\r\n        <SideNav.Toggle />\r\n        <SideNav.Nav selected=\"home\">\r\n          <NavItem eventKey=\"home\">\r\n            <NavIcon className=\"increased-height\">\r\n              <img className=\"user-icon\" style={{ fontSize: \"1.75em\" }} />\r\n            </NavIcon>\r\n            <NavText>\r\n              <h4>{userName}</h4>\r\n            </NavText>\r\n            <NavItem>\r\n              <NavText style={{ align: \"left\" }}>\r\n                {loginInfo.user ? loginInfo.user.name : \"no name\"}\r\n              </NavText>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavText style={{ align: \"left\" }}>\r\n                {loginInfo.user ? loginInfo.user.email : \"no email\"}\r\n              </NavText>\r\n            </NavItem>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavIcon>{/* <img className=\"online-user user-icon\" /> */}</NavIcon>\r\n            <NavText style={{ align: \"left\" }}>\r\n              <div className=\"online-user-heading\">\r\n                Online Users ({onlineUsers.length})\r\n              </div>\r\n            </NavText>\r\n          </NavItem>\r\n          <div className=\"line\" />\r\n          <div className=\"online-user-list\">\r\n            <SideNav.Nav>\r\n              {onlineUsers.map((user: User, index) => {\r\n                return (\r\n                  <NavItem key={index}>\r\n                    <NavIcon>\r\n                      <img className=\"online-user user-icon\" />\r\n                    </NavIcon>\r\n                    <NavText>{user.userName}</NavText>\r\n                  </NavItem>\r\n                );\r\n              })}\r\n            </SideNav.Nav>\r\n          </div>\r\n        </SideNav.Nav>\r\n      </SideNav>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useDebounce } from \"./Debouncer\";\r\nimport Message from \"../Models/Message\";\r\nimport { socket } from \"../Dao/SocketDAO\";\r\nimport LoginContext from \"../Contexts/LoginContext\";\r\nexport default function ChatInputLayout(props) {\r\n  const [messageText, setMessageText] = React.useState();\r\n  const [emojiClassName, setEmojiClassName] = useState(\"emoji confused-emoji\");\r\n  const emojiFetch = useDebounce(messageText, 1000);\r\n  // const [isOpen,setIsOpen]\r\n  const { isMobile } = props;\r\n  const {\r\n    state: { loginInfo }\r\n  } = useContext(LoginContext);\r\n  let isMounted = false;\r\n  useEffect(() => {\r\n    if (!isMounted) {\r\n      isMounted = true;\r\n      socket.on(\"toneAnalysed\", data => {\r\n        console.log(data);\r\n        console.log(data.document_tone.tones);\r\n        console.log(data.document_tone.tones.length);\r\n        console.log(JSON.stringify(data.document_tone.tones));\r\n\r\n        if (data.document_tone.tones.length > 0) {\r\n          var tone_id = data.document_tone.tones[0].tone_id;\r\n          console.log(\"here\");\r\n          if (data.document_tone.tones.length > 1) {\r\n            var mydata = data.document_tone.tones;\r\n            var mydata = mydata.sort(function(a, b) {\r\n              console.log(a.score);\r\n\r\n              console.log(b.score);\r\n              return b.score - a.score;\r\n            });\r\n          }\r\n          console.log(mydata);\r\n          tone_id = mydata[0].tone_id;\r\n          console.log(tone_id);\r\n          switch (tone_id) {\r\n            case \"sadness\":\r\n              setEmojiClassName(\"emoji sad-emoji\");\r\n              break;\r\n\r\n            case \"joy\":\r\n              setEmojiClassName(\"emoji happy-emoji\");\r\n              break;\r\n            case \"anger\":\r\n              setEmojiClassName(\"emoji angry-emoji\");\r\n              break;\r\n            case \"fear\":\r\n              setEmojiClassName(\"emoji scared-emoji\");\r\n              break;\r\n            default:\r\n              setEmojiClassName(\"emoji confused-emoji\");\r\n              break;\r\n          }\r\n        } else {\r\n          setEmojiClassName(\"emoji confused-emoji\");\r\n        }\r\n      });\r\n    }\r\n  }, []);\r\n  useEffect(() => {\r\n    console.log(isMobile);\r\n  }, [isMobile]);\r\n  useEffect(() => {\r\n    if (emojiFetch) {\r\n      if (messageText.length > 0) getEmoji();\r\n      else {\r\n        setEmojiClassName(\"emoji confused-emoji\");\r\n      }\r\n    }\r\n  }, [emojiFetch]);\r\n  //send messages using username\r\n  const sendMessage = body => {\r\n    if (loginInfo.user && body.length > 0) {\r\n      var message: Message = {\r\n        userName: loginInfo.user.userName,\r\n        message: body,\r\n        time: new Date().getTime()\r\n      };\r\n      socket.emit(\"newMessage\", message);\r\n      setMessageText(\"\");\r\n    }\r\n  };\r\n  const sendEmoji = async () => {\r\n    console.log(\"sending\");\r\n\r\n    switch (emojiClassName) {\r\n      case \"emoji confused-emoji\":\r\n        {\r\n          console.log(\"here\");\r\n          await sendMessage(\":| \");\r\n        }\r\n        break;\r\n      case \"emoji happy-emoji\":\r\n        {\r\n          await sendMessage(\":) \");\r\n        }\r\n        break;\r\n      case \"emoji sad-emoji\":\r\n        {\r\n          await sendMessage(\":( \");\r\n        }\r\n        break;\r\n      case \"emoji scared-emoji\":\r\n        {\r\n          await sendMessage(\":E \");\r\n        }\r\n        break;\r\n      case \"emoji angry-emoji\": {\r\n        await sendMessage(\":? \");\r\n      }\r\n    }\r\n  };\r\n  const getEmoji = async () => {\r\n    console.log(\"getting emoji\");\r\n    // await socket.emit(\"getToneAnalysis\", message);\r\n  };\r\n  return (\r\n    <div\r\n      className={\r\n        isMobile ? \"chat-input-layout-mobile\" : \"chat-input-layout-desktop\"\r\n      }\r\n    >\r\n      <div className=\"input-group\">\r\n        <textarea\r\n          className=\"form-control chat-input-field\"\r\n          aria-label=\"Recipient's username\"\r\n          aria-describedby=\"basic-addon2\"\r\n          name=\"message\"\r\n          value={messageText}\r\n          onChange={async e => {\r\n            setMessageText(e.target.value);\r\n          }}\r\n        />\r\n        <div className=\"input-group-append\">\r\n          <label className=\"input-group-text \">\r\n            <img\r\n              className={emojiClassName}\r\n              id=\"emoji\"\r\n              onClick={async () => {\r\n                alert(\"clock\");\r\n                await sendEmoji();\r\n              }}\r\n            />\r\n          </label>\r\n          <button\r\n            className=\"input-group-text\"\r\n            id=\"basic-addon2\"\r\n            onClick={() => {\r\n              sendMessage(messageText);\r\n            }}\r\n          >\r\n            <img className=\" emoji send-icon\" alt=\"\" />\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nexport function useDebounce(value, delay) {\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(() => {\r\n    const handler = setTimeout(() => {\r\n      setDebouncedValue(value);\r\n    }, delay);\r\n\r\n    return () => {\r\n      clearTimeout(handler);\r\n    };\r\n  }, [value]);\r\n\r\n  return debouncedValue;\r\n}\r\n","import React, { useContext } from \"react\";\r\nimport Message from \"../Models/Message\";\r\nimport LoginContext from \"../Contexts/LoginContext\";\r\nimport { format } from \"date-fns\";\r\nimport HappyEmoji from \"../icons/happy.svg\";\r\nimport SadEmoji from \"../icons/sad.svg\";\r\nimport ConfusedEmoji from \"../icons/confused.svg\";\r\nimport AngryEmoji from \"../icons/angry.svg\";\r\nimport ScaredEmoji from \"../icons/scared.svg\";\r\n\r\nexport default function MessageBox(message: Message) {\r\n  const {\r\n    state: { loginInfo }\r\n  } = useContext(LoginContext);\r\n  if (loginInfo && loginInfo.user && loginInfo.user.userName) {\r\n    return (\r\n      <div className=\"message\">\r\n        <div\r\n          className={\r\n            message.userName === loginInfo.user.userName\r\n              ? \"my-message\"\r\n              : \"other-message\"\r\n          }\r\n        >\r\n          <div className=\"message-box\">\r\n            <div className=\"user-name\">{message.userName}</div>\r\n            <div className=\"message-text\">\r\n              {message.message === \":) \" ? (\r\n                <div className=\"emoji\">\r\n                  <img alt=\":)\" className=\"emoji\" src={HappyEmoji} />\r\n                </div>\r\n              ) : message.message === \":| \" ? (\r\n                <div className=\"emoji\">\r\n                  <img alt=\":|\" className=\"emoji\" src={ConfusedEmoji} />\r\n                </div>\r\n              ) : message.message === \":( \" ? (\r\n                <div className=\"emoji\">\r\n                  <img alt=\":(\" className=\"emoji\" src={SadEmoji} />\r\n                </div>\r\n              ) : message.message === \":? \" ? (\r\n                <div className=\"emoji\">\r\n                  <img alt=\":?\" className=\"emoji\" src={AngryEmoji} />\r\n                </div>\r\n              ) : message.message === \":E \" ? (\r\n                <div className=\"emoji\">\r\n                  <img alt=\":E \" className=\"emoji\" src={ScaredEmoji} />\r\n                </div>\r\n              ) : (\r\n                message.message\r\n              )}\r\n            </div>\r\n            <div className=\"time\">\r\n              {message.time ? format(message.time, \"hh:mm a\") : \"\"}\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { socket } from \"../Dao/SocketDAO\";\r\nimport Message from \"../Models/Message\";\r\nimport MessageBox from \"../Components/MessageBox\";\r\nexport default function ChatScreen() {\r\n  const [messageList, setMessageList]: [Array<Message>, any] = useState([]);\r\n  const [message, setMessage] = useState<Message>();\r\n\r\n  let isMounted = false;\r\n  useEffect(() => {\r\n    if (!isMounted) {\r\n      if (!socket.connected) {\r\n        socket.connect();\r\n      }\r\n      isMounted = true;\r\n      socket.emit(\"requestAllMessages\", { data: \"OK\" });\r\n      socket.on(\"getAllMessages\", data => {\r\n        data.forEach(element => {\r\n          setMessage(element);\r\n        });\r\n      });\r\n\r\n      socket.on(\"getNewMessage\", data => {\r\n        var newMessage: Message = {\r\n          userName: data.userName,\r\n          message: data.message,\r\n          time: data.time\r\n        };\r\n        setMessage(newMessage);\r\n      });\r\n    }\r\n  }, []);\r\n  useEffect(() => {\r\n    setMessageList([...messageList, message]);\r\n  }, [message]);\r\n  return (\r\n    <div className=\"chats\">\r\n      {messageList.map((item: Message, index) => {\r\n        if (item)\r\n          return (\r\n            <MessageBox\r\n              message={item.message}\r\n              userName={item.userName}\r\n              time={item.time}\r\n              key={index}\r\n            />\r\n          );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Navbar from \"../Components/Navbar\";\r\nimport Sidebar from \"../Components/Sidebar\";\r\nimport Test from \"./Test\";\r\nimport ChatInputLayout from \"../Components/ChatInputLayout\";\r\nimport ChatScreen from \"../Components/ChatScreen\";\r\n\r\nexport default function Home() {\r\n  const [isMobile, setIsMobile] = useState<boolean>(false);\r\n  let isMounted = false;\r\n  window.addEventListener(\"resize\", listner => {\r\n    if (window.innerWidth <= 700) {\r\n      setIsMobile(true);\r\n    } else {\r\n      setIsMobile(false);\r\n    }\r\n  });\r\n  useEffect(() => {\r\n    if (!isMounted) {\r\n      isMounted = true;\r\n      if (window.innerWidth <= 700) {\r\n        setIsMobile(true);\r\n      } else {\r\n        setIsMobile(false);\r\n      }\r\n    }\r\n  }, []);\r\n  useEffect(() => {\r\n    // console.log(isMobile);\r\n    if (!isMobile) {\r\n      document.getElementsByClassName(\r\n        \"sidenav---sidenav-toggle---1KRjR\"\r\n      )[0].className = \"vanish\";\r\n    } else {\r\n      document.getElementsByClassName(\"vanish\")[0].className =\r\n        \"sidenav---sidenav-toggle---1KRjR\";\r\n    }\r\n  }, [isMobile]);\r\n  return (\r\n    <React.Fragment>\r\n      <Sidebar isMobile={isMobile} />\r\n      <main className={isMobile ? \"chat-body-mobile\" : \"chat-body-desktop\"}>\r\n        <Navbar />\r\n        <ChatScreen />\r\n      </main>\r\n      <ChatInputLayout isMobile={isMobile} />\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useState, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport LoginContext from \"../Contexts/LoginContext\";\r\nimport { Redirect } from \"react-router-dom\";\r\nexport default function SignupComponent(props) {\r\n  const {\r\n    state: { loginInfo },\r\n    actions: { signUp }\r\n  } = useContext<any>(LoginContext);\r\n  const [userName, setUserName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [rPassword, setRPassword] = useState(\"\");\r\n  const [error, setError] = useState<{ type; error_message }>({\r\n    type: null,\r\n    error_message: null\r\n  });\r\n  const formSubmit = async e => {\r\n    e.preventDefault();\r\n    // setError({ type: \"username\", error_message: \"Name Already Exist\" });\r\n    if (userName == null || email == null || password == null || name == null) {\r\n      alert(\"one or more fields might be empty\");\r\n    } else {\r\n      if (password !== rPassword) {\r\n        alert(\"password and alert password do not match\");\r\n      } else {\r\n        //final signup\r\n        var res = await signUp(email, password, userName, name);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"basic-form\">\r\n        <h2 className=\"\">Register</h2>\r\n        <form\r\n          onSubmit={e => {\r\n            formSubmit(e);\r\n          }}\r\n        >\r\n          <div className=\"input-group mb-3\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"userName\"\r\n              onChange={e => {\r\n                setUserName(e.target.value);\r\n              }}\r\n              className=\"form-control\"\r\n              placeholder=\"Username\"\r\n            />\r\n          </div>\r\n          <div className=\"input-group mb-3\">\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              onChange={e => {\r\n                setName(e.target.value);\r\n              }}\r\n              className=\"form-control\"\r\n              placeholder=\"Full Name\"\r\n            />\r\n          </div>\r\n          <div className=\"input-group mb-3\">\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              onChange={e => {\r\n                setEmail(e.target.value);\r\n              }}\r\n              className=\"form-control\"\r\n              placeholder=\"Email-Id\"\r\n            />\r\n          </div>\r\n          <div className=\"input-group mb-3\">\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              id=\"password\"\r\n              onChange={e => {\r\n                setPassword(e.target.value);\r\n              }}\r\n              className=\"form-control\"\r\n              placeholder=\"Password\"\r\n            />\r\n          </div>\r\n          <div className=\"input-group mb-3\">\r\n            <input\r\n              type=\"password\"\r\n              name=\"rPassword\"\r\n              onChange={e => {\r\n                setRPassword(e.target.value);\r\n              }}\r\n              className=\"form-control\"\r\n              placeholder=\"Repeat Password\"\r\n            />\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"btn btn-primary\"\r\n            onClick={formSubmit}\r\n          >\r\n            Register\r\n          </button>\r\n        </form>\r\n        <Link to=\"/login\" className=\"hyperlink\">\r\n          Login\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import * as React from \"react\";\r\nimport { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useContext, useState } from \"react\";\r\nimport LoginContext from \"../Contexts/LoginContext\";\r\n\r\nimport { Redirect } from \"react-router-dom\";\r\nexport default function LoginComponent(props) {\r\n  const {\r\n    state: { loginInfo },\r\n    actions: { login }\r\n  } = useContext<any>(LoginContext);\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const formSubmit = async e => {\r\n    e.preventDefault();\r\n    await login(email, password);\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"basic-form\">\r\n        <form\r\n          onSubmit={e => {\r\n            formSubmit(e);\r\n          }}\r\n        >\r\n          <div className=\"input-group mb-3\">\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              onChange={e => {\r\n                setEmail(e.target.value);\r\n              }}\r\n              className=\"form-control\"\r\n              placeholder=\"Email-Id\"\r\n            />\r\n          </div>\r\n          <div className=\"input-group mb-3\">\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              onChange={e => {\r\n                setPassword(e.target.value);\r\n              }}\r\n              className=\"form-control\"\r\n              placeholder=\"Password\"\r\n            />\r\n          </div>\r\n          <button type=\"submit\" className=\"btn btn-primary\">\r\n            Login\r\n          </button>\r\n        </form>\r\n        <Link to=\"/\" className=\"hyperlink\">\r\n          Register\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport SignupComponent from \"../Components/SignupComponent\";\r\nimport LoginComponent from \"../Components/LoginComponent\";\r\nimport appIcon from \"../icons/app-icon.svg\";\r\nexport default function LoginSignup(props) {\r\n  return (\r\n    <React.Fragment>\r\n      <img src={appIcon} className=\"app-icon\" />\r\n      {props.page === \"signup\" ? <SignupComponent /> : <LoginComponent />}\r\n    </React.Fragment>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Snackbar } from \"@material-ui/core\";\r\nlet openSnackbarFn;\r\nexport default function CustomSnackbar() {\r\n  interface snack {\r\n    open: boolean;\r\n    message: string;\r\n    timeout: number;\r\n    onhide?: (param?) => any;\r\n  }\r\n  const [snack, setSnack] = useState<snack>({\r\n    open: false,\r\n    message: \"\",\r\n    timeout: 0\r\n  });\r\n\r\n  const openSnackbar = ({ message, timeout, onhide }) => {\r\n    setSnack({\r\n      timeout: timeout,\r\n      open: true,\r\n      message: message,\r\n      onhide: onhide\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    openSnackbarFn = openSnackbar;\r\n  }, []);\r\n  return (\r\n    <div\r\n      className=\"alert alert-warning alert-dismissible fade show\"\r\n      role=\"alert\"\r\n      hidden={!snack.open}\r\n    >\r\n      <strong>{snack.message}</strong>\r\n      <button\r\n        type=\"button\"\r\n        className=\"close\"\r\n        data-dismiss=\"alert\"\r\n        aria-label=\"Close\"\r\n        onClick={() => {\r\n          setSnack({ ...snack, open: false });\r\n        }}\r\n      >\r\n        <span aria-hidden=\"true\">&times;</span>\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport function openSnackbar(val) {\r\n  openSnackbarFn({ ...val });\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport firebase from \"firebase\";\r\nimport LoginContext from \"./LoginContext\";\r\nimport LoginInfo from \"../Models/LoginInfo\";\r\nimport { openSnackbar } from \"../Components/CustomSnackBar\";\r\nimport User from \"../Models/User\";\r\nimport { string } from \"prop-types\";\r\nimport { stringify } from \"querystring\";\r\nimport { socket } from \"../Dao/SocketDAO\";\r\n\r\nexport default function LoginProvider(props) {\r\n  const [loginInfo, setLoginInfo] = useState<LoginInfo>({\r\n    isLoggedIn: null,\r\n    user: null,\r\n    uid: null\r\n  });\r\n  const setLoginDetails = (loginInfo: LoginInfo) => {\r\n    setLoginInfo(loginInfo);\r\n  };\r\n  const login = async (email, password) => {\r\n    firebase\r\n      .auth()\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(async user => {})\r\n      .catch(err => {\r\n        openSnackbar({ message: err.message });\r\n      });\r\n  };\r\n  const getDb = () => {\r\n    return firebase.firestore();\r\n  };\r\n\r\n  const signUp = async (email, password, userName, name) => {\r\n    var firebaseDoc = await getDb()\r\n      .collection(\"users\")\r\n      .doc(userName)\r\n      .get();\r\n    if (firebaseDoc.exists) {\r\n      openSnackbar({ message: \"Username Already Exists\" });\r\n      return false;\r\n    } else {\r\n      await firebase\r\n        .auth()\r\n        .createUserWithEmailAndPassword(email, password)\r\n        .then(async user => {\r\n          if (user.user) {\r\n            var userObj: User = {\r\n              email: email,\r\n              userName: userName,\r\n              uid: user.user.uid,\r\n              status: \"online\",\r\n              name: name\r\n            };\r\n            await getDb()\r\n              .collection(\"users\")\r\n              .doc(userName)\r\n              .set(userObj);\r\n            await getDb()\r\n              .collection(\"usernames\")\r\n              .doc(user.user.uid)\r\n              .set({ username: userName });\r\n            return true;\r\n          }\r\n        })\r\n        .catch(err => {\r\n          openSnackbar({ message: err.message, timeout: 3000 });\r\n\r\n          return false;\r\n        })\r\n        .catch(err => {\r\n          openSnackbar({ message: err.message, timeout: 3000 });\r\n\r\n          return false;\r\n        });\r\n    }\r\n  };\r\n  const getUserDetails = uid => {\r\n    getDb()\r\n      .collection(\"users\")\r\n      .where(\"uid\", \"==\", uid)\r\n      .get()\r\n      .then(res => {\r\n        if (res) {\r\n          var userDetails = res.docs[0].data();\r\n          if (userDetails as User) {\r\n            var user: User = {\r\n              email: userDetails.email,\r\n              name: userDetails.name,\r\n              uid: userDetails.uid,\r\n              status: userDetails.status,\r\n              userName: userDetails.userName\r\n            };\r\n            //now we have got username so we will be psuhing it to server\r\n            socket.emit(\"change_username\", { username: userDetails.userName });\r\n            setLoginInfo({ ...loginInfo, user: user });\r\n          }\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  return (\r\n    <LoginContext.Provider\r\n      value={{\r\n        state: { loginInfo },\r\n        actions: {\r\n          login,\r\n          getUserDetails,\r\n          signUp,\r\n          setLoginDetails\r\n        }\r\n      }}\r\n    >\r\n      {props.children}\r\n    </LoginContext.Provider>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Component } from \"react\";\r\nexport default function Loading() {\r\n  return (\r\n    <div className=\"loading-background\">\r\n      <div className=\"loading-icon-container\">\r\n        <img className=\"rotate\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport logo from \"./logo.svg\";\r\nimport \"./App.css\";\r\nimport \"./Styles/stylesheet.css\";\r\nimport \"@trendmicro/react-sidenav/dist/react-sidenav.css\";\r\nimport \"./Styles/bootstrap.css\";\r\n\r\nimport firebase from \"firebase\";\r\nimport VideoChat from \"./Pages/VideoChat\";\r\nimport Test from \"./Pages/Test\";\r\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\r\nimport Home from \"./Pages/Home\";\r\nimport LoginSignup from \"./Pages/LoginSignup\";\r\nimport LoginContext from \"./Contexts/LoginContext\";\r\nimport LoginProvider from \"./Contexts/LoginProvider\";\r\nimport CustomSnackbar from \"./Components/CustomSnackBar\";\r\n\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { socket } from \"./Dao/SocketDAO\";\r\nimport Loading from \"./Pages/Loading\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <LoginProvider>\r\n        <CustomSnackbar />\r\n        <Router>\r\n          <Switch>\r\n            <Route\r\n              path=\"/\"\r\n              exact={true}\r\n              render={props => <LoginWrapper page=\"signup\" />}\r\n            />\r\n            <Route\r\n              path=\"/login\"\r\n              exact={true}\r\n              render={props => <LoginWrapper page=\"login\" />}\r\n            />\r\n            {/* <Route path=\"/loading\" exact={true} component={Loading} /> */}\r\n            <PrivateRoute path=\"/Chat\" component={Home} />\r\n          </Switch>\r\n        </Router>\r\n      </LoginProvider>\r\n\r\n      {/* <Home /> */}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\nfunction LoginWrapper(props) {\r\n  const {\r\n    state: { loginInfo },\r\n    actions: { setLoginDetails, getUserDetails }\r\n  } = useContext(LoginContext);\r\n  let isMounted = false;\r\n  useEffect(() => {\r\n    if (!isMounted) {\r\n      isMounted = true;\r\n      firebase.auth().onAuthStateChanged(\r\n        user => {\r\n          if (user) {\r\n            setLoginDetails({ isLoggedIn: true, uid: user.uid, user: null });\r\n          } else {\r\n            setLoginDetails({ isLoggedIn: false, uid: null, user: null });\r\n          }\r\n        },\r\n        error => {}\r\n      );\r\n    }\r\n  }, []);\r\n  if (\r\n    loginInfo &&\r\n    loginInfo.uid != null &&\r\n    loginInfo.isLoggedIn === true &&\r\n    loginInfo.user === null\r\n  ) {\r\n    getUserDetails(loginInfo.uid);\r\n  }\r\n  if (\r\n    loginInfo &&\r\n    loginInfo.isLoggedIn === true &&\r\n    loginInfo.uid != null &&\r\n    loginInfo.user != null\r\n  ) {\r\n    return <Redirect to=\"/Chat\" />;\r\n  } else {\r\n    if (loginInfo.isLoggedIn === false) {\r\n      return <LoginSignup page={props.page} />;\r\n    }\r\n    return <Loading />;\r\n  }\r\n}\r\nfunction PrivateRoute({ component: Component, ...rest }) {\r\n  const {\r\n    state: { loginInfo }\r\n  } = useContext(LoginContext);\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        if (!loginInfo.isLoggedIn) {\r\n          return <Redirect to=\"/login\" />;\r\n        }\r\n        return <Component {...props} />;\r\n      }}\r\n    />\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport firebase from \"firebase\";\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n  apiKey: \"AIzaSyBcp3foKTJXDg-zxijmR1nS3Gwf28LXQHo\",\r\n  authDomain: \"chatapp-529b9.firebaseapp.com\",\r\n  databaseURL: \"https://chatapp-529b9.firebaseio.com\",\r\n  projectId: \"chatapp-529b9\",\r\n  storageBucket: \"\",\r\n  messagingSenderId: \"884053658028\",\r\n  appId: \"1:884053658028:web:01b7a181476a366d\"\r\n};\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}